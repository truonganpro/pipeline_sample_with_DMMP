{"version":3,"file":"static/chunks/5231.01349baa1572713c.js","mappings":"glBA4BA,IAAMA,EAAsBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAiBA,uLAErBC,EAAAA,EAAwB,GACtBA,EAAAA,EAAqB,GAClCA,EAAAA,EAAkB,GAILA,EAAAA,EAA0B,IAKvCC,EAAwBC,CAAAA,EAAAA,EAAAA,IAAAA,EAAK,KACxCC,CAAAA,EAAAA,EAAAA,EAAAA,IACAC,CAAAA,EAAAA,EAAAA,CAAAA,EAAiB,iBAEjB,IAAMC,EAAcC,CAAAA,EAAAA,EAAAA,EAAAA,EAClBC,EACA,CACEC,4BAA6B,EAC/B,GAGIC,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,EAA0BL,EAAaM,EAAAA,EAAeA,EACrE,CAACC,KAAAA,CAAI,CAAC,CAAGP,EACTQ,EAASD,MAAAA,EAAAA,KAAAA,EAAAA,EAAME,QAAQ,CAACC,IAAI,CAE5BC,EAAWC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IAChB,EACLC,QAAS,IACP,IAAMC,EAAeC,SAASC,QAAQ,CAACC,IAAI,CAC3C,GAAIH,EAAc,CAChB,IAAMI,EAAS,IAAIC,OAAO,IAA0BC,MAAA,CAAtBN,EAAaO,KAAK,CAAC,GAAG,MAC9CC,EAASC,EAAOC,eAAe,CAACN,GACxBI,EAAOG,QAAQ,KAE3BF,EAAOG,QAAQ,CAACJ,EAAOK,IAAI,GAAIL,EAAOM,EAAE,GAAI,CAACC,UAAW,kBAAkB,GAC1EN,EAAOO,cAAc,CAACR,EAAOK,IAAI,IAErC,CACF,CACF,GACC,EAAE,SAEL,EASE,GAAAI,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACzC,EAAAA,CAAAA,GACD,GAAAsC,EAAAC,IAAA,EAACG,EAAAA,CAAGA,CAAAA,CACFC,QAAS,CAACC,SAAU,GAAIC,WAAY,EAAE,EACtCC,OAAO,SACPC,KAAM,CAACC,UAAW,MAAOC,WAAY,SAAUC,eAAgB,eAAe,YAE9E,GAAAZ,EAAAC,IAAA,EAACY,EAAAA,EAAUA,CAAAA,WAAC,oBACO,GAAAb,EAAAG,GAAA,EAACW,EAAAA,EAAIA,CAAAA,CAACC,MAAO,CAACC,SAAU,MAAM,WAAIxC,EAAKyC,OAAO,MAEjE,GAAAjB,EAAAG,GAAA,EAACe,EAAAA,EAAqBA,CAAAA,CAAC7C,aAAcA,OAGvC,GAAA2B,EAAAG,GAAA,EAACgB,MAAAA,CAAIJ,MAAO,CAACN,KAAM,EAAGW,SAAU,QAAQ,WACtC,GAAApB,EAAAG,GAAA,EAACkB,EAAAA,CAAmBA,CAAAA,CAClBC,MAAO7C,GAAU,GACjB8C,QAAS,CAACC,SAAU,GAAMC,YAAa,GAAMC,KAAM,MAAM,EACzD9C,SAAUA,EACV+C,MAAO,CAAC,kBAAkB,QAzB9B,GAAA3B,EAAAG,GAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACC,QAAS,CAACC,SAAU,EAAE,WACzB,GAAAN,EAAAG,GAAA,EAACyB,EAAAA,CAAOA,CAAAA,CAACC,QAAQ,aA6BzB,GAEaC,EAAqB,KAChC,GAAM,CAACC,UAAAA,CAAS,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,EAAAA,CAAmBA,EAClD,MACE,GAAAjC,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAAC+B,EAAAA,CAAUA,CAAAA,CAACC,MAAO,GAAAnC,EAAAG,GAAA,EAACiC,EAAAA,EAAOA,CAAAA,UAAEL,IAAsBM,KAAM,GAAArC,EAAAG,GAAA,EAACmC,EAAAA,CAAYA,CAAAA,CAACC,IAAI,aAC3E,GAAAvC,EAAAG,GAAA,EAACtC,EAAAA,CAAAA,KAGP,CAIA2E,CAAAA,EAAA,QAAeV,EAER,IAAM3D,EAAwBsE,CAAAA,EAAAA,EAAAA,EAAAA,EAAGA,4dCxGjC,IAAMC,EAA4B,KACvC3E,CAAAA,EAAAA,EAAAA,EAAAA,IACAC,CAAAA,EAAAA,EAAAA,CAAAA,EAAiB,WAEjB,IAAM2E,EAAYzE,CAAAA,EAAAA,EAAAA,EAAAA,EAChB0E,EACA,CACExE,4BAA6B,EAC/B,GAEIC,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,EAA0BqE,EAAWpE,EAAAA,EAAeA,EACnE,CAACsE,QAAAA,CAAO,CAAErE,KAAAA,CAAI,CAAC,CAAGmE,EAexB,MACE,GAAA3C,EAAAC,IAAA,EAACkB,MAAAA,CAAIJ,MAAO,CAAC+B,UAAW,MAAM,YAC5B,GAAA9C,EAAAC,IAAA,EAACG,EAAAA,CAAGA,CAAAA,CACFC,QAAS,CAACC,SAAU,GAAIC,WAAY,EAAE,EACtCE,KAAM,CAACC,UAAW,MAAOC,WAAY,SAAUC,eAAgB,eAAe,YAE9E,GAAAZ,EAAAG,GAAA,EAACU,EAAAA,EAAUA,CAAAA,UAAC,oBACZ,GAAAb,EAAAG,GAAA,EAACgB,MAAAA,UACC,GAAAnB,EAAAG,GAAA,EAACe,EAAAA,EAAqBA,CAAAA,CAAC7C,aAAcA,SApB3C,CAAIwE,GAAYrE,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAME,QAAQ,EAOvBF,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAME,QAAQ,EACnB,GAAAsB,EAAAG,GAAA,EAAC4C,EAAAA,CAAUA,CAAAA,CAACC,eAAgBxE,EAAKE,QAAQ,CAACuE,YAAY,CAACC,iBAAiB,GACtE,KAPA,GAAAlD,EAAAG,GAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACC,QAAS,CAACE,WAAY,EAAE,EAAGQ,MAAO,CAACoC,MAAOvF,EAAAA,CAAgB,EAAE,WAAG,eAwB5E,EAEawF,EAAqB,KAChC,GAAM,CAACrB,UAAAA,CAAS,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,EAAAA,CAAmBA,EAClD,MACE,GAAAjC,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAAC+B,EAAAA,CAAUA,CAAAA,CAACC,MAAO,GAAAnC,EAAAG,GAAA,EAACiC,EAAAA,EAAOA,CAAAA,UAAEL,IAAsBM,KAAM,GAAArC,EAAAG,GAAA,EAACmC,EAAAA,CAAYA,CAAAA,CAACC,IAAI,aAC3E,GAAAvC,EAAAG,GAAA,EAACuC,EAAAA,CAAAA,KAGP,CAIAF,CAAAA,EAAA,QAAeY,EAEf,IAAMR,EAAwBH,CAAAA,EAAAA,EAAAA,EAAAA,EAAGA,IAQ7BY,EAAAA,CAAwBA,mKCxErB,IAAMC,EAAiB,OAAC,CAACC,KAAAA,CAAI,CAAEC,KAAAA,CAAI,CAAQ,CAAAC,EAChD,MACE,GAAAC,EAAAzD,IAAA,EAACG,EAAAA,CAAGA,CAAAA,CAACW,MAAO,CAAC4C,OAAQ,OAAQvC,SAAU,QAAQ,EAAGX,KAAM,CAACC,UAAW,QAAQ,YAC1E,GAAAgD,EAAAvD,GAAA,EAAC+B,EAAAA,CAAUA,CAAAA,CACTC,MAAO,GAAAuB,EAAAvD,GAAA,EAACiC,EAAAA,EAAOA,CAAAA,UAAC,eAChBwB,MAAO,GAAAF,EAAAvD,GAAA,EAAC0D,EAAAA,CAAeA,CAAAA,CAACC,MAAM,yBAEhC,GAAAJ,EAAAzD,IAAA,EAACG,EAAAA,CAAGA,CAAAA,CAACW,MAAO,CAACK,SAAU,QAAQ,EAAGX,KAAM,CAACC,UAAW,MAAOqD,KAAM,CAAC,YAChE,GAAAL,EAAAvD,GAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACW,MAAO,CAACN,KAAM,YAAaqC,UAAW,MAAM,EAAGtC,OAAO,iBACxD+C,IAEH,GAAAG,EAAAvD,GAAA,EAACC,EAAAA,CAAGA,CAAAA,CACFK,KAAM,CAACC,UAAW,SAAUC,WAAY,SAAS,EACjDI,MAAO,CAACN,KAAM,EAAGW,SAAU,QAAQ,WAElCoC,SAKX,sECrBA,IAAMQ,EAA6B,CACjC,CACEC,IAAK,iBACLC,KAAM,OACNC,KAAM,GAAAT,EAAAvD,GAAA,EAACiE,EAAAA,EAAIA,CAAAA,CAACC,KAAK,kBACjBP,MAAO,iBACPQ,KAAM,uBACR,EACA,CACEL,IAAK,UACLC,KAAM,OACNC,KAAM,GAAAT,EAAAvD,GAAA,EAACiE,EAAAA,EAAIA,CAAAA,CAACC,KAAK,WACjBP,MAAO,UACPQ,KAAM,qBACR,EACA,CACEL,IAAK,qBACLC,KAAM,OACNC,KAAM,GAAAT,EAAAvD,GAAA,EAACiE,EAAAA,EAAIA,CAAAA,CAACC,KAAK,gBACjBP,MAAO,qBACPQ,KAAM,yBACR,EACA,CACEL,IAAK,SACLC,KAAM,OACNC,KAAM,GAAAT,EAAAvD,GAAA,EAACiE,EAAAA,EAAIA,CAAAA,CAACC,KAAK,SACjBP,MAAO,4BACPQ,KAAM,oBACR,EACD,CAEYC,EAAmB,KAC9B,GAAM,CAACC,SAAAA,CAAQ,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IACb,CAACC,EAAkBC,EAAoB,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAEnDC,EAAsC,CAC1CZ,IAAK,gBACLC,KAAM,SACNC,KAAM,GAAAT,EAAAvD,GAAA,EAACiE,EAAAA,EAAIA,CAAAA,CAACC,KAAK,mBACjBP,MAAO,gBACPgB,QAAS,IAAMH,EAAoB,GACrC,EAEA,MACE,GAAAjB,EAAAzD,IAAA,EAACG,EAAAA,CAAGA,CAAAA,CAACC,QAAS,aACZ,GAAAqD,EAAAvD,GAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACC,QAAS,CAAC0E,OAAQ,EAAE,WACtBf,EAAMgB,GAAG,CAAC,GAEP,GAAAtB,EAAAvD,GAAA,EAAC8E,EAAAA,CAAWA,CAAAA,CAEVC,KAAMA,EACNC,OAAQD,SAAAA,EAAKhB,IAAI,EAAeM,IAAaU,EAAKZ,IAAI,EAFjDY,EAAKjB,GAAG,KAOrB,GAAAP,EAAAvD,GAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACC,QAAS,CAAC+E,IAAK,EAAE,EAAG5E,OAAO,eAC9B,GAAAkD,EAAAzD,IAAA,EAAAyD,EAAAxD,QAAA,YACE,GAAAwD,EAAAvD,GAAA,EAAC8E,EAAAA,CAAWA,CAAAA,CAACC,KAAML,IACnB,GAAAnB,EAAAvD,GAAA,EAACkF,EAAAA,CAAkBA,CAAAA,CACjBC,OAAQZ,EACRa,QAAS,IAAMZ,EAAoB,IACnCa,aAAcC,CAAAA,EAAAA,EAAAA,CAAAA,aAM1B,sEClEO,IAAMC,EAAmB,KAC9B,GAAM,CAACC,iBAAAA,CAAgB,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,WAC3B,EAKE,GAAAlC,EAAAvD,GAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACK,KAAM,CAACC,UAAW,SAAUC,WAAY,SAAS,EAAGI,MAAO,CAACN,KAAM,EAAGW,SAAU,QAAQ,WAC1F,GAAAsC,EAAAzD,IAAA,EAAC4F,EAAAA,EAAMA,CAAAA,WACL,GAAAnC,EAAAvD,GAAA,EAAC2F,EAAAA,CAAKA,CAAAA,CAACxB,KAAK,iCACV,GAAAZ,EAAAvD,GAAA,EAAC4F,EAAAA,wBAAwBA,CAAAA,CAAAA,KAE3B,GAAArC,EAAAvD,GAAA,EAAC2F,EAAAA,CAAKA,CAAAA,CAACxB,KAAK,+BACV,GAAAZ,EAAAvD,GAAA,EAACuC,EAAAA,yBAAyBA,CAAAA,CAAAA,KAE5B,GAAAgB,EAAAvD,GAAA,EAAC2F,EAAAA,CAAKA,CAAAA,CAACxB,KAAK,mCACV,GAAAZ,EAAAvD,GAAA,EAAC6F,EAAAA,8BAA8BA,CAAAA,CAAAA,KAEjC,GAAAtC,EAAAvD,GAAA,EAAC2F,EAAAA,CAAKA,CAAAA,CAACxB,KAAK,8BACV,GAAAZ,EAAAvD,GAAA,EAACtC,EAAAA,qBAAqBA,CAAAA,CAAAA,KAExB,GAAA6F,EAAAvD,GAAA,EAAC2F,EAAAA,CAAKA,CAAAA,CAACxB,KAAK,IAAI2B,eAAc,YAC5B,GAAAvC,EAAAvD,GAAA,EAAC+F,EAAAA,EAAQA,CAAAA,CAACrG,GAAG,iCAnBZ,GAAA6D,EAAAvD,GAAA,EAAC+F,EAAAA,EAAQA,CAAAA,CAACrG,GAAG,cAwBxB,ECjCasG,EAAe,IACnB,GAAAzC,EAAAvD,GAAA,EAACmD,EAAcA,CAACC,KAAM,GAAAG,EAAAvD,GAAA,EAACoE,EAAgBA,CAAAA,GAAKf,KAAM,GAAAE,EAAAvD,GAAA,EAACuF,EAAgBA,CAAAA,KAK5E,IAAAU,EAAeD,qJCqBR,IAAMlB,EAAc,IACzB,GAAM,CAACE,OAAAA,EAAS,EAAK,CAAED,KAAAA,CAAI,CAAC,CAAGmB,EACzB,CAACnC,KAAAA,CAAI,CAAEC,KAAAA,CAAI,CAAEL,MAAAA,CAAK,CAAEwC,aAAAA,CAAY,CAAEC,QAAAA,EAAU,EAAE,CAAEC,SAAAA,EAAW,EAAK,CAAC,CAAGtB,EACpEuB,EACJ,GAAAC,EAAAzG,IAAA,EAACG,EAAAA,CAAGA,CAAAA,CACFC,QAAS,CAACC,SAAU,EAAGiD,KAAM,GAAIK,MAAO,CAAC,EACzCnD,KAAM,CAACC,UAAW,MAAOiG,IAAK,EAAGhG,WAAY,SAAUC,eAAgB,eAAe,YAEtF,GAAA8F,EAAAzG,IAAA,EAACG,EAAAA,CAAGA,CAAAA,CAACK,KAAM,CAACC,UAAW,MAAOiG,IAAK,EAAGhG,WAAY,QAAQ,EAAGb,UAAU,yBACpEqE,EACAL,KAEH,GAAA4C,EAAAvG,GAAA,EAACgB,MAAAA,UAAKmF,aAIV,SAAIpC,GAAoBsC,EAWtB,GAAAE,EAAAvG,GAAA,EAACyG,EAAAA,CAAOA,CAAAA,CAACC,QAAS,CAAC,CAACN,EAASE,QAASF,EAASO,UAAU,QAAQC,QAAQ,iBACvE,GAAAL,EAAAvG,GAAA,EAAC6G,EAAAA,CAAoBC,QAAS9B,EAAQqB,SAAUA,EAAU1B,QAASI,EAAKJ,OAAO,UAC5E2B,MAXH,GAAAC,EAAAvG,GAAA,EAACyG,EAAAA,CAAOA,CAAAA,CAACC,QAAS,CAAC,CAACN,EAASE,QAASF,EAASO,UAAU,QAAQC,QAAQ,iBACvE,GAAAL,EAAAvG,GAAA,EAAC+G,EAAAA,CAAkBrH,GAAIqF,EAAKZ,IAAI,CAAE2C,QAAS9B,WACxCsB,KAaX,EAEMU,EAAyBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAGA,qVACZ,OAAC,CAACH,QAAAA,CAAO,CAAC,CAAAxD,SAAMwD,EAAUrJ,EAAAA,EAAqB,GAAK,eAE/D,OAAC,CAACqJ,QAAAA,CAAO,CAAC,CAAAxD,SAAMwD,EAAUrJ,EAAAA,EAAe,GAAKA,EAAAA,EAAkB,IAWnD,OAAC,CAACqJ,QAAAA,CAAO,CAAC,CAAAxD,SAC5BwD,EAAUrJ,EAAAA,EAAqB,GAAKA,EAAAA,EAAsB,IAKxC,OAAC,CAACqJ,QAAAA,CAAO,CAAC,CAAAxD,SAC5BwD,EAAUrJ,EAAAA,EAAqB,GAAKA,EAAAA,EAA2B,IACxD,OAAC,CAACqJ,QAAAA,CAAO,CAAC,CAAAxD,SAAMwD,EAAUrJ,EAAAA,EAAe,GAAKA,EAAAA,EAAkB,IAKvEyJ,EAAAA,EAAWA,CACS,OAAC,CAACJ,QAAAA,CAAO,CAAC,CAAAxD,SAAMwD,EAAUrJ,EAAAA,EAAe,GAAKA,EAAAA,EAAkB,KAKpFsJ,EAAoBI,CAAAA,EAAAA,EAAAA,EAAAA,EAAOC,EAAAA,EAAIA,EAAAA,UAAAA,CAAAA,uCACjCJ,GAGEH,EAAsBM,CAAAA,EAAAA,EAAAA,EAAAA,EAAOE,EAAAA,CAAcA,EAAAA,UAAAA,CAAAA,uCAC7CL","sources":["webpack://_N_E/../ui-core/src/instance/InstanceConfig.tsx","webpack://_N_E/../ui-core/src/instance/InstanceHealthPage.tsx","webpack://_N_E/../ui-core/src/settings/SettingsLayout.tsx","webpack://_N_E/../ui-core/src/settings/SettingsLeftPane.tsx","webpack://_N_E/../ui-core/src/settings/SettingsMainPane.tsx","webpack://_N_E/../ui-core/src/settings/SettingsRoot.tsx","webpack://_N_E/../ui-core/src/ui/SideNavItem.tsx"],"sourcesContent":["import 'codemirror/addon/search/searchcursor';\n\nimport {\n  Box,\n  Code,\n  Colors,\n  Heading,\n  PageHeader,\n  Spinner,\n  StyledRawCodeMirror,\n  Subheading,\n} from '@dagster-io/ui-components';\nimport CodeMirror from 'codemirror';\nimport {memo, useContext, useMemo} from 'react';\nimport {createGlobalStyle} from 'styled-components';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceConfigQuery, InstanceConfigQueryVariables} from './types/InstanceConfig.types';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nconst InstanceConfigStyle = createGlobalStyle`\n  .CodeMirror.cm-s-instance-config.cm-s-instance-config {\n    background-color: ${Colors.backgroundDefault()};\n    box-shadow: 0 1px 0 ${Colors.keylineDefault()};\n    color: ${Colors.textDefault()};\n    height: 100%;\n\n    .config-highlight.config-highlight {\n      background-color: ${Colors.backgroundLimeHover()};\n    }\n  }\n`;\n\nexport const InstanceConfigContent = memo(() => {\n  useTrackPageView();\n  useDocumentTitle('Configuration');\n\n  const queryResult = useQuery<InstanceConfigQuery, InstanceConfigQueryVariables>(\n    INSTANCE_CONFIG_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const {data} = queryResult;\n  const config = data?.instance.info;\n\n  const handlers = useMemo(() => {\n    return {\n      onReady: (editor: CodeMirror.Editor) => {\n        const documentHash = document.location.hash;\n        if (documentHash) {\n          const target = new RegExp(`^${documentHash.slice(1)}:`);\n          const cursor = editor.getSearchCursor(target);\n          const found = cursor.findNext();\n          if (found) {\n            editor.markText(cursor.from(), cursor.to(), {className: 'config-highlight'});\n            editor.scrollIntoView(cursor.from());\n          }\n        }\n      },\n    };\n  }, []);\n\n  if (!data) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <InstanceConfigStyle />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border=\"bottom\"\n        flex={{direction: 'row', alignItems: 'center', justifyContent: 'space-between'}}\n      >\n        <Subheading>\n          Dagster version: <Code style={{fontSize: '16px'}}>{data.version}</Code>\n        </Subheading>\n        <QueryRefreshCountdown refreshState={refreshState} />\n      </Box>\n      {/* Div wrapper on CodeMirror to allow entire page to scroll */}\n      <div style={{flex: 1, overflow: 'hidden'}}>\n        <StyledRawCodeMirror\n          value={config || ''}\n          options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n          handlers={handlers}\n          theme={['instance-config']}\n        />\n      </div>\n    </>\n  );\n});\n\nexport const InstanceConfigRoot = () => {\n  const {pageTitle} = useContext(InstancePageContext);\n  return (\n    <>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"config\" />} />\n      <InstanceConfigContent />\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceConfigRoot;\n\nexport const INSTANCE_CONFIG_QUERY = gql`\n  query InstanceConfigQuery {\n    version\n    instance {\n      id\n      info\n    }\n  }\n`;\n","import {Box, Colors, Heading, PageHeader, Subheading} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\n\nimport {DaemonList} from './DaemonList';\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceHealthQuery, InstanceHealthQueryVariables} from './types/InstanceHealthPage.types';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nexport const InstanceHealthPageContent = () => {\n  useTrackPageView();\n  useDocumentTitle('Daemons');\n\n  const queryData = useQuery<InstanceHealthQuery, InstanceHealthQueryVariables>(\n    INSTANCE_HEALTH_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n  const refreshState = useQueryRefreshAtInterval(queryData, FIFTEEN_SECONDS);\n  const {loading, data} = queryData;\n\n  const daemonContent = () => {\n    if (loading && !data?.instance) {\n      return (\n        <Box padding={{horizontal: 24}} style={{color: Colors.textLight()}}>\n          Loading…\n        </Box>\n      );\n    }\n    return data?.instance ? (\n      <DaemonList daemonStatuses={data.instance.daemonHealth.allDaemonStatuses} />\n    ) : null;\n  };\n\n  return (\n    <div style={{overflowY: 'auto'}}>\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        flex={{direction: 'row', alignItems: 'center', justifyContent: 'space-between'}}\n      >\n        <Subheading>Daemon statuses</Subheading>\n        <div>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </div>\n      </Box>\n      {daemonContent()}\n    </div>\n  );\n};\n\nexport const InstanceHealthPage = () => {\n  const {pageTitle} = useContext(InstancePageContext);\n  return (\n    <>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"health\" />} />\n      <InstanceHealthPageContent />\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceHealthPage;\n\nconst INSTANCE_HEALTH_QUERY = gql`\n  query InstanceHealthQuery {\n    instance {\n      id\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n","import {Box, Heading, PageHeader} from '@dagster-io/ui-components';\n\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\n\ninterface Props {\n  left: React.ReactNode;\n  main: React.ReactNode;\n}\n\nexport const SettingsLayout = ({left, main}: Props) => {\n  return (\n    <Box style={{height: '100%', overflow: 'hidden'}} flex={{direction: 'column'}}>\n      <PageHeader\n        title={<Heading>Deployment</Heading>}\n        right={<ReloadAllButton label=\"Reload definitions\" />}\n      />\n      <Box style={{overflow: 'hidden'}} flex={{direction: 'row', grow: 1}}>\n        <Box style={{flex: '0 0 292px', overflowY: 'auto'}} border=\"right\">\n          {left}\n        </Box>\n        <Box\n          flex={{direction: 'column', alignItems: 'stretch'}}\n          style={{flex: 1, overflow: 'hidden'}}\n        >\n          {main}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import {Box, Icon} from '@dagster-io/ui-components';\nimport {useState} from 'react';\nimport {useLocation} from 'react-router-dom';\nimport {useVisibleFeatureFlagRows} from 'shared/app/useVisibleFeatureFlagRows.oss';\n\nimport {UserSettingsDialog} from '../app/UserSettingsDialog/UserSettingsDialog';\nimport {SideNavItem, SideNavItemConfig} from '../ui/SideNavItem';\n\nconst items: SideNavItemConfig[] = [\n  {\n    key: 'code-locations',\n    type: 'link',\n    icon: <Icon name=\"code_location\" />,\n    label: 'Code locations',\n    path: '/deployment/locations',\n  },\n  {\n    key: 'daemons',\n    type: 'link',\n    icon: <Icon name=\"daemon\" />,\n    label: 'Daemons',\n    path: '/deployment/daemons',\n  },\n  {\n    key: 'concurrency-limits',\n    type: 'link',\n    icon: <Icon name=\"concurrency\" />,\n    label: 'Concurrency limits',\n    path: '/deployment/concurrency',\n  },\n  {\n    key: 'config',\n    type: 'link',\n    icon: <Icon name=\"tune\" />,\n    label: 'Configuration (read-only)',\n    path: '/deployment/config',\n  },\n];\n\nexport const SettingsLeftPane = () => {\n  const {pathname} = useLocation();\n  const [showUserSettings, setShowUserSettings] = useState(false);\n\n  const userSettingsItem: SideNavItemConfig = {\n    key: 'user-settings',\n    type: 'button',\n    icon: <Icon name=\"account_circle\" />,\n    label: 'User settings',\n    onClick: () => setShowUserSettings(true),\n  };\n\n  return (\n    <Box padding={12}>\n      <Box padding={{bottom: 12}}>\n        {items.map((item) => {\n          return (\n            <SideNavItem\n              key={item.key}\n              item={item}\n              active={item.type === 'link' && pathname === item.path}\n            />\n          );\n        })}\n      </Box>\n      <Box padding={{top: 16}} border=\"top\">\n        <>\n          <SideNavItem item={userSettingsItem} />\n          <UserSettingsDialog\n            isOpen={showUserSettings}\n            onClose={() => setShowUserSettings(false)}\n            visibleFlags={useVisibleFeatureFlagRows()}\n          />\n        </>\n      </Box>\n    </Box>\n  );\n};\n","import {Box} from '@dagster-io/ui-components';\nimport {Redirect, Switch} from 'react-router-dom';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {Route} from '../app/Route';\nimport {CodeLocationsPageContent} from '../instance/CodeLocationsPage';\nimport {InstanceConcurrencyPageContent} from '../instance/InstanceConcurrency';\nimport {InstanceConfigContent} from '../instance/InstanceConfig';\nimport {InstanceHealthPageContent} from '../instance/InstanceHealthPage';\n\nexport const SettingsMainPane = () => {\n  const {flagSettingsPage} = useFeatureFlags();\n  if (!flagSettingsPage) {\n    return <Redirect to=\"/locations\" />;\n  }\n\n  return (\n    <Box flex={{direction: 'column', alignItems: 'stretch'}} style={{flex: 1, overflow: 'hidden'}}>\n      <Switch>\n        <Route path=\"/deployment/locations\">\n          <CodeLocationsPageContent />\n        </Route>\n        <Route path=\"/deployment/daemons\">\n          <InstanceHealthPageContent />\n        </Route>\n        <Route path=\"/deployment/concurrency\">\n          <InstanceConcurrencyPageContent />\n        </Route>\n        <Route path=\"/deployment/config\">\n          <InstanceConfigContent />\n        </Route>\n        <Route path=\"*\" isNestingRoute>\n          <Redirect to=\"/deployment/locations\" />\n        </Route>\n      </Switch>\n    </Box>\n  );\n};\n","import {SettingsLayout} from './SettingsLayout';\nimport {SettingsLeftPane} from './SettingsLeftPane';\nimport {SettingsMainPane} from './SettingsMainPane';\n\nexport const SettingsRoot = () => {\n  return <SettingsLayout left={<SettingsLeftPane />} main={<SettingsMainPane />} />;\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default SettingsRoot;\n","import {Box, Colors, IconWrapper, Tooltip, UnstyledButton} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled, {css} from 'styled-components';\n\ninterface SideNavItemInterface {\n  key: string;\n  icon: React.ReactNode;\n  label: React.ReactNode;\n  disabled?: boolean;\n  rightElement?: React.ReactNode;\n  tooltip?: string;\n  onClick?: () => void;\n}\n\nexport interface SideNavItemLinkConfig extends SideNavItemInterface {\n  type: 'link';\n  path: string;\n}\n\nexport interface SideNavItemButtonConfig extends SideNavItemInterface {\n  type: 'button';\n  onClick: () => void;\n}\n\nexport type SideNavItemConfig = SideNavItemLinkConfig | SideNavItemButtonConfig;\n\ninterface Props {\n  active?: boolean;\n  item: SideNavItemConfig;\n}\n\nexport const SideNavItem = (props: Props) => {\n  const {active = false, item} = props;\n  const {type, icon, label, rightElement, tooltip = '', disabled = false} = item;\n  const content = (\n    <Box\n      padding={{vertical: 4, left: 12, right: 8}}\n      flex={{direction: 'row', gap: 8, alignItems: 'center', justifyContent: 'space-between'}}\n    >\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}} className=\"iconAndLabel\">\n        {icon}\n        {label}\n      </Box>\n      <div>{rightElement}</div>\n    </Box>\n  );\n\n  if (type === 'link' && !disabled) {\n    return (\n      <Tooltip canShow={!!tooltip} content={tooltip} placement=\"right\" display=\"block\">\n        <StyledSideNavLink to={item.path} $active={active}>\n          {content}\n        </StyledSideNavLink>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip canShow={!!tooltip} content={tooltip} placement=\"right\" display=\"block\">\n      <StyledSideNavButton $active={active} disabled={disabled} onClick={item.onClick}>\n        {content}\n      </StyledSideNavButton>\n    </Tooltip>\n  );\n};\n\nconst sharedSideNavItemStyle = css<{$active: boolean}>`\n  background-color: ${({$active}) => ($active ? Colors.backgroundBlue() : 'transparent')};\n  border-radius: 8px;\n  color: ${({$active}) => ($active ? Colors.textBlue() : Colors.textDefault())};\n  display: block;\n  font-size: 14px;\n  line-height: 20px;\n  text-decoration: none;\n  transition: 100ms background-color linear;\n  user-select: none;\n  width: 100%;\n\n  :focus {\n    outline: none;\n    background-color: ${({$active}) =>\n      $active ? Colors.backgroundBlue() : Colors.backgroundLight()};\n  }\n\n  :hover,\n  :active {\n    background-color: ${({$active}) =>\n      $active ? Colors.backgroundBlue() : Colors.backgroundLightHover()};\n    color: ${({$active}) => ($active ? Colors.textBlue() : Colors.textDefault())};\n    text-decoration: none;\n  }\n\n  .iconAndLabel {\n    ${IconWrapper} {\n      background-color: ${({$active}) => ($active ? Colors.textBlue() : Colors.textDefault())};\n    }\n  }\n`;\n\nconst StyledSideNavLink = styled(Link)<{$active: boolean}>`\n  ${sharedSideNavItemStyle}\n`;\n\nconst StyledSideNavButton = styled(UnstyledButton)<{$active: boolean}>`\n  ${sharedSideNavItemStyle}\n`;\n"],"names":["InstanceConfigStyle","createGlobalStyle","Colors","InstanceConfigContent","memo","useTrackPageView","useDocumentTitle","queryResult","useQuery","INSTANCE_CONFIG_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","data","config","instance","info","handlers","useMemo","onReady","documentHash","document","location","hash","target","RegExp","concat","slice","cursor","editor","getSearchCursor","findNext","markText","from","to","className","scrollIntoView","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","Fragment","jsx","Box","padding","vertical","horizontal","border","flex","direction","alignItems","justifyContent","Subheading","Code","style","fontSize","version","QueryRefreshCountdown","div","overflow","StyledRawCodeMirror","value","options","readOnly","lineNumbers","mode","theme","Spinner","purpose","InstanceConfigRoot","pageTitle","useContext","InstancePageContext","PageHeader","title","Heading","tabs","InstanceTabs","tab","__webpack_exports__","gql","InstanceHealthPageContent","queryData","INSTANCE_HEALTH_QUERY","loading","overflowY","DaemonList","daemonStatuses","daemonHealth","allDaemonStatuses","color","InstanceHealthPage","INSTANCE_HEALTH_FRAGMENT","SettingsLayout","left","main","param","jsx_runtime","height","right","ReloadAllButton","label","grow","items","key","type","icon","Icon","name","path","SettingsLeftPane","pathname","useLocation","showUserSettings","setShowUserSettings","useState","userSettingsItem","onClick","bottom","map","SideNavItem","item","active","top","UserSettingsDialog","isOpen","onClose","visibleFlags","useVisibleFeatureFlagRows","SettingsMainPane","flagSettingsPage","useFeatureFlags","Switch","Route","CodeLocationsPageContent","InstanceConcurrencyPageContent","isNestingRoute","Redirect","SettingsRoot","settings_SettingsRoot","props","rightElement","tooltip","disabled","content","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","gap","Tooltip","canShow","placement","display","StyledSideNavButton","$active","StyledSideNavLink","sharedSideNavItemStyle","css","IconWrapper","styled","Link","UnstyledButton"],"sourceRoot":""}